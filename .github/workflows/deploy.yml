name: Push
on: push
env:
  IMAGE: ghcr.io/navikt/happiness-dashboard:${{ github.sha }}
  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  build:
    name: build and push docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: actions/cache@v3
        id: yarn-cache
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install yarn dependencies
        run: yarn --immutable
      - name: Lint
        run: yarn lint && yarn tsc
      - name: Build app
        run: yarn build
      - uses: docker/setup-buildx-action@v2
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and publish Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            "NPM_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"

  deploy-kafka-topic:
    name: deploy kafka topic dev
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Deploy topics to dev
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: kafka-pool=nav-dev
          RESOURCE: .nais/kafka-topic.yml

  deploy-to-dev-gcp:
    name: deploy to nais dev
    needs: [deploy-kafka-topic]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais-dev.yml
          VAR: image=${{ env.IMAGE }}
